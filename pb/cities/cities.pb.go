// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: cities.proto

package cities

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type City struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *City) Reset() {
	*x = City{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *City) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*City) ProtoMessage() {}

func (x *City) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use City.ProtoReflect.Descriptor instead.
func (*City) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{0}
}

func (x *City) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *City) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EmptyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyMessage) Reset() {
	*x = EmptyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessage) ProtoMessage() {}

func (x *EmptyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessage.ProtoReflect.Descriptor instead.
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{1}
}

type Cities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City []*City `protobuf:"bytes,1,rep,name=city,proto3" json:"city,omitempty"`
}

func (x *Cities) Reset() {
	*x = Cities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cities) ProtoMessage() {}

func (x *Cities) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cities.ProtoReflect.Descriptor instead.
func (*Cities) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{2}
}

func (x *Cities) GetCity() []*City {
	if x != nil {
		return x.City
	}
	return nil
}

type CityStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City *City `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *CityStream) Reset() {
	*x = CityStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityStream) ProtoMessage() {}

func (x *CityStream) ProtoReflect() protoreflect.Message {
	mi := &file_cities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityStream.ProtoReflect.Descriptor instead.
func (*CityStream) Descriptor() ([]byte, []int) {
	return file_cities_proto_rawDescGZIP(), []int{3}
}

func (x *CityStream) GetCity() *City {
	if x != nil {
		return x.City
	}
	return nil
}

var File_cities_proto protoreflect.FileDescriptor

var file_cities_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x2a, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x2e,
	0x0a, 0x0a, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x32, 0x7b,
	0x0a, 0x0d, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3a, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e,
	0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2e, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x70,
	0x62, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3b, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cities_proto_rawDescOnce sync.Once
	file_cities_proto_rawDescData = file_cities_proto_rawDesc
)

func file_cities_proto_rawDescGZIP() []byte {
	file_cities_proto_rawDescOnce.Do(func() {
		file_cities_proto_rawDescData = protoimpl.X.CompressGZIP(file_cities_proto_rawDescData)
	})
	return file_cities_proto_rawDescData
}

var file_cities_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cities_proto_goTypes = []interface{}{
	(*City)(nil),         // 0: cities.City
	(*EmptyMessage)(nil), // 1: cities.EmptyMessage
	(*Cities)(nil),       // 2: cities.Cities
	(*CityStream)(nil),   // 3: cities.CityStream
}
var file_cities_proto_depIdxs = []int32{
	0, // 0: cities.Cities.city:type_name -> cities.City
	0, // 1: cities.CityStream.city:type_name -> cities.City
	1, // 2: cities.CitiesService.ListStream:input_type -> cities.EmptyMessage
	1, // 3: cities.CitiesService.List:input_type -> cities.EmptyMessage
	3, // 4: cities.CitiesService.ListStream:output_type -> cities.CityStream
	2, // 5: cities.CitiesService.List:output_type -> cities.Cities
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cities_proto_init() }
func file_cities_proto_init() {
	if File_cities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*City); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cities_proto_goTypes,
		DependencyIndexes: file_cities_proto_depIdxs,
		MessageInfos:      file_cities_proto_msgTypes,
	}.Build()
	File_cities_proto = out.File
	file_cities_proto_rawDesc = nil
	file_cities_proto_goTypes = nil
	file_cities_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CitiesServiceClient is the client API for CitiesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CitiesServiceClient interface {
	ListStream(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (CitiesService_ListStreamClient, error)
	List(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*Cities, error)
}

type citiesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCitiesServiceClient(cc grpc.ClientConnInterface) CitiesServiceClient {
	return &citiesServiceClient{cc}
}

func (c *citiesServiceClient) ListStream(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (CitiesService_ListStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CitiesService_serviceDesc.Streams[0], "/cities.CitiesService/ListStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &citiesServiceListStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CitiesService_ListStreamClient interface {
	Recv() (*CityStream, error)
	grpc.ClientStream
}

type citiesServiceListStreamClient struct {
	grpc.ClientStream
}

func (x *citiesServiceListStreamClient) Recv() (*CityStream, error) {
	m := new(CityStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *citiesServiceClient) List(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*Cities, error) {
	out := new(Cities)
	err := c.cc.Invoke(ctx, "/cities.CitiesService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CitiesServiceServer is the server API for CitiesService service.
type CitiesServiceServer interface {
	ListStream(*EmptyMessage, CitiesService_ListStreamServer) error
	List(context.Context, *EmptyMessage) (*Cities, error)
}

// UnimplementedCitiesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCitiesServiceServer struct {
}

func (*UnimplementedCitiesServiceServer) ListStream(*EmptyMessage, CitiesService_ListStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ListStream not implemented")
}
func (*UnimplementedCitiesServiceServer) List(context.Context, *EmptyMessage) (*Cities, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterCitiesServiceServer(s *grpc.Server, srv CitiesServiceServer) {
	s.RegisterService(&_CitiesService_serviceDesc, srv)
}

func _CitiesService_ListStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CitiesServiceServer).ListStream(m, &citiesServiceListStreamServer{stream})
}

type CitiesService_ListStreamServer interface {
	Send(*CityStream) error
	grpc.ServerStream
}

type citiesServiceListStreamServer struct {
	grpc.ServerStream
}

func (x *citiesServiceListStreamServer) Send(m *CityStream) error {
	return x.ServerStream.SendMsg(m)
}

func _CitiesService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CitiesServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cities.CitiesService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CitiesServiceServer).List(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _CitiesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cities.CitiesService",
	HandlerType: (*CitiesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _CitiesService_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListStream",
			Handler:       _CitiesService_ListStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cities.proto",
}
